{
    "version": "https://jsonfeed.org/version/1",
    "title": "Answer™のBlog",
    "subtitle": "“我觉得我写的每一行代码都是诗，即使他们无法运行也很美”",
    "icon": "https://answery.cn/images/favicon.ico",
    "description": "一名无情的摩的佬",
    "home_page_url": "https://answery.cn",
    "items": [
        {
            "id": "https://answery.cn/untils/guid/",
            "url": "https://answery.cn/untils/guid/",
            "title": "全局唯一标识符（Globally Unique Identifier）",
            "date_published": "2022-03-22T02:45:16.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h1>\n<ul>\n<li>本算法来源于简书开源代码，详见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9mZGJmMjkzZDBhODU=\">https://www.jianshu.com/p/fdbf293d0a85</span></li>\n<li>全局唯一标识符（uuid，Globally Unique Identifier）, 也称作 uuid (Universally Unique IDentifier)</li>\n<li>一般用于多个组件之间，给它一个唯一的标识符，或者 v-for 循环的时候，如果使用数组的 index 可能会导致更新列表出现问题</li>\n<li>最可能的情况是左滑删除 item 或者对某条信息流 &quot;不喜欢&quot; 并去掉它的时候，会导致组件内的数据可能出现错乱</li>\n<li>v-for 的时候，推荐使用后端返回的 id 而不是循环的 index</li>\n<li>@param {Number} len uuid 的长度</li>\n<li>@param {Nubmer} radix 生成 uuid 的基数 (意味着返回的字符串都是这个基数),2 - 二进制，8 - 八进制，10 - 十进制，16 - 十六进制</li>\n</ul>\n<h1 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> CODE</h1>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">guid</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">len <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> radix <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">let</span> chars <span class=\"token operator\">=</span> <span class=\"token string\">'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">let</span> uuid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tradix <span class=\"token operator\">=</span> radix <span class=\"token operator\">||</span> chars<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// 如果指定 uuid 长度，只是取随机的字符，0|x 为位运算，能去掉 x 的小数位，返回整数位</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> uuid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token operator\">|</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radix<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">let</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token comment\">//rfc4122 标准要求返回的 uuid 中，某些位为固定的字符</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tuuid<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tuuid<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">36</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uuid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\tr <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\tuuid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chars<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x8</span> <span class=\"token operator\">:</span> r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     <span class=\"token keyword\">return</span> uuid<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "工具集",
                "guid"
            ]
        },
        {
            "id": "https://answery.cn/hellow/",
            "url": "https://answery.cn/hellow/",
            "title": "初次见面，请多指教",
            "date_published": "2022-03-18T08:12:38.000Z",
            "content_html": "<h2 id=\"欢迎大家访问我的博客\"><a class=\"anchor\" href=\"#欢迎大家访问我的博客\">#</a> 欢迎大家访问我的博客</h2>\n<blockquote blur=\"\">\n<p>本博客用于记录自己的学习，分享一些小日常使用吧。<span class=\"spoiler\" title=\"你知道得太多了\">毕竟有没有人看都是个问题</span>.</p>\n</blockquote>\n<h2 id=\"以上欢迎大家时不时来看看我有没有来更新\"><a class=\"anchor\" href=\"#以上欢迎大家时不时来看看我有没有来更新\">#</a> 以上，欢迎大家时不时来看看我有没有来更新</h2>\n",
            "tags": [
                "欢迎"
            ]
        },
        {
            "id": "https://answery.cn/first/",
            "url": "https://answery.cn/first/",
            "title": "写在最前面",
            "date_published": "2022-03-18T07:42:54.000Z",
            "content_html": "<div class=\"note info\">\n<p>计划了<ins class=\"wavy\">两年</ins>之久的 Blog 终于完成，可喜可贺可喜可贺。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==\">Hexo</span> : 本博客搭建框架</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span> ：本博客使用的主题</li>\n</ul>\n</div>\n<h1 id=\"经历的路程\"><a class=\"anchor\" href=\"#经历的路程\">#</a> 经历的路程</h1>\n<ol>\n<li>从工作开始就打算搞个自己的博客。但是由于刚毕业，毫无技术。摸摸索索的用原生 JS 去实现了一个大佬基本框架<span class=\"exturl\" data-url=\"aHR0cHM6Ly96b3V3YW5nLnZpcC8=\">春原庄的雪 | ゆき・もと・ゆず</span>。</li>\n<li>之后又用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmNuLyMvemgtQ04=\"> element</span> + <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52dWVqcy5vcmcv\">VUE</span> 搭建了后台系统</li>\n<li>又搞了台 <code>服务器</code>  <span class=\"spoiler\" title=\"你知道得太多了\">最后服务器过期了，我都没搞完系统的搭建 tips: 还是因为懒了</span></li>\n<li>接着用 <code>node.js</code>  +  <code>MySql</code>  去完成数据库和接口。但是。。。😏, 由于许久未用 SQL 语句，<span class=\"spoiler\" title=\"你知道得太多了\">别讲什么高深的语句，SELECT * 一把梭</span>，写到分页发现不会了，然后就没然后了🤣</li>\n<li>又搁置一段时间后，想着在服务器过期前用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93b3JkcHJlc3Mub3JnLw==\"> WordPress</span> 搭建，不出意外的又出意外了。<span class=\"red\">再一次搁置了</span>🤡</li>\n<li>没多久又看上了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==\"> Hexo</span> 来搭建。<span class=\"grey\">然后再一次搁置</span></li>\n<li>不过最后，终于是在这段时间搭建完成。至于以后会不会用起来，咱也 <code>不知道</code> 啊！<br />\n<strong> 以上就是这两年的路程了</strong><br />\n之后<span class=\"spoiler\" title=\"你知道得太多了\">有时间可能大概也许</span>会接着去完善这个博客</li>\n</ol>\n",
            "tags": [
                "欢迎",
                "Hexo"
            ]
        }
    ]
}